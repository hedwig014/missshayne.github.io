{"meta":{"title":"shayne","subtitle":"赢不强求,败也不俯首","description":"shayne的博客","author":"shayne","url":"http://yoursite.com","root":"/"},"pages":[{"title":"back-end","date":"2019-11-12T14:32:30.000Z","updated":"2019-11-12T14:32:30.727Z","comments":true,"path":"back-end/index.html","permalink":"http://yoursite.com/back-end/index.html","excerpt":"","text":""},{"title":"front-end","date":"2019-11-12T14:36:45.000Z","updated":"2019-11-12T14:36:45.607Z","comments":true,"path":"front-end/index.html","permalink":"http://yoursite.com/front-end/index.html","excerpt":"","text":""}],"posts":[{"title":"Vue.js:自定义组件","slug":"Vue-js-自定义组件","date":"2019-11-13T13:52:06.000Z","updated":"2019-11-13T15:06:45.033Z","comments":true,"path":"2019/11/13/Vue-js-自定义组件/","link":"","permalink":"http://yoursite.com/2019/11/13/Vue-js-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6/","excerpt":"需求 在路由模式为hash时，通过后端的数据渲染，就会有判断是否外链 问题 能否根据链接来决定渲染标签，而不会产生多余的标签 为什么绑定在组件上的特性有的会应用到组件根元素上","text":"需求 在路由模式为hash时，通过后端的数据渲染，就会有判断是否外链 问题 能否根据链接来决定渲染标签，而不会产生多余的标签 为什么绑定在组件上的特性有的会应用到组件根元素上 涉及vue知识点 is特性 指令v-bind使用 props使用 解决通过component + is的骚操作可以完美解决产生多余标签的问题，至于第二个问题，那就是非props特性就能解疑啦 总结没事多瞅瞅文档，总会有不同的收获。 代码1234567891011121314151617181920212223242526272829303132&lt;template&gt; &lt;component v-bind=&quot;linkProps(to)&quot;&gt; &lt;slot /&gt; &lt;/component&gt;&lt;/template&gt;&lt;script&gt;import &#123; isExternal &#125; from &apos;~/utils&apos;export default &#123; name: &apos;CLink&apos;, props: &#123; to: &#123; type: String, required: true &#125; &#125;, methods: &#123; linkProps(url) &#123; if (isExternal(url)) &#123; return &#123; is: &apos;a&apos;, href: url &#125; &#125; return &#123; is: &apos;nuxt-link&apos;, to: url &#125; &#125; &#125;&#125;&lt;/script&gt; 使用就像平常使用a标签一样，只不过href要换成to","categories":[],"tags":[{"name":"Vue.js","slug":"Vue-js","permalink":"http://yoursite.com/tags/Vue-js/"},{"name":"前端","slug":"前端","permalink":"http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"mac tomcat安装与shell命令配置","slug":"tomcat安装与shell命令配置","date":"2019-11-12T12:55:33.000Z","updated":"2019-11-12T15:18:23.185Z","comments":true,"path":"2019/11/12/tomcat安装与shell命令配置/","link":"","permalink":"http://yoursite.com/2019/11/12/tomcat%E5%AE%89%E8%A3%85%E4%B8%8Eshell%E5%91%BD%E4%BB%A4%E9%85%8D%E7%BD%AE/","excerpt":"记录安装tomcat碰到的问题 自定义tomcat shell命令","text":"记录安装tomcat碰到的问题 自定义tomcat shell命令 安装tomcat碰到的问题 安装tomcat(tar.gz)下载链接：http://tomcat.apache.org 将tomcat移动到~/Development下并解压，重命名（也可放在其他文件夹下,建议/usr/local)移动: mv /Users/shayne/Downloads/apache-tomcat-8.5.47.tar.gz ~/Development解压: tar zxvf apache-tomcat-8.5.47.tar.gz重命名: mv apache-tomcat-8.5.47 Tomcat 进入Tomcat的bin目录下给文件设置运行权限sudo chmod 755 *.sh 启动tomcat进入Tomcat/bin下，运行startup.sh,遇到两个问题 logs文件夹不存在手动创建了logs，终端提示tomcat started，但在浏览器输入localhost:8080,没有看到tomcat的默认页解决： 下载包的问题，重新下载 停止tomcat运行shutdown.sh 自定义tomcat shell命令每次运行tomcat，都要进入到相关目录，很繁琐，就想到了自定义命令，虽然网上已有一大堆，但还是记录下，增强记忆 进入usr/local/bin下，vi tomcat1234567891011121314151617#!/bin/bashcase $1 in start) sh /Users/shayne/Development/Tomcat/bin/startup.sh ;; stop) sh /Users/shayne/Development/Tomcat/bin/shutdown.sh ;; restart) sh /Users/shayne/Development/Tomcat/bin/shutdown.sh sh /Users/shayne/Development/Tomcat/bin/startup.sh ;; *) echo \"Usage: start|stop|restart\" ;;esacexit 0 赋予tomcat文件执行权限chmod 777 tomcat至此就可以随便在终端通过tomcat start，tomcat stop启用tomcat了 参考文章:[1] macOS各个文件夹的作用[2] mac命令行启动tomcat","categories":[],"tags":[{"name":"tomcat","slug":"tomcat","permalink":"http://yoursite.com/tags/tomcat/"},{"name":"后端","slug":"后端","permalink":"http://yoursite.com/tags/%E5%90%8E%E7%AB%AF/"}]}]}